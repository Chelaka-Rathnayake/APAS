/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import View.StudentManagement.DatabaseManager;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author User
 */
public class Analyticsview extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Analyticsview.class.getName());

    /**
     * Creates new form Analyticsview
     */
    public Analyticsview() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public class DatabaseManager {
    private static final String URL = "jdbc:mysql://localhost:3306/apas";
    private static final String USER = "ch";
    private static final String PASSWORD = "chela";

    public static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }
}
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAnalyze = new javax.swing.JButton();
        txtid = new javax.swing.JTextField();
        lblGPA = new javax.swing.JLabel();
        lblSubjects = new javax.swing.JLabel();
        lblMissing = new javax.swing.JLabel();
        lblname = new javax.swing.JLabel();
        chartPanel = new javax.swing.JPanel();
        lblFailed = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        gpaProgress = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAdvice = new javax.swing.JTextArea();
        btnback = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Enter student ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 57, -1, 30));

        btnAnalyze.setBackground(new java.awt.Color(248, 230, 230));
        btnAnalyze.setForeground(new java.awt.Color(102, 153, 255));
        btnAnalyze.setText("Analyze");
        btnAnalyze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyzeActionPerformed(evt);
            }
        });
        getContentPane().add(btnAnalyze, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, -1, 30));
        getContentPane().add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 140, 30));

        lblGPA.setBackground(new java.awt.Color(204, 255, 255));
        lblGPA.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblGPA, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 200, 33));

        lblSubjects.setForeground(new java.awt.Color(255, 204, 102));
        getContentPane().add(lblSubjects, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 280, 260, 36));

        lblMissing.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblMissing, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 220, 200, 33));

        lblname.setBackground(new java.awt.Color(102, 102, 255));
        lblname.setForeground(java.awt.Color.orange);
        getContentPane().add(lblname, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 200, 32));

        chartPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(chartPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 127, -1, 222));

        lblFailed.setForeground(new java.awt.Color(255, 0, 51));
        getContentPane().add(lblFailed, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, 220, 80));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Student Performance Analysis");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 260, 30));

        gpaProgress.setMaximum(400);
        gpaProgress.setStringPainted(true);
        getContentPane().add(gpaProgress, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, 200, 30));

        txtAdvice.setEditable(false);
        txtAdvice.setColumns(20);
        txtAdvice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAdvice.setLineWrap(true);
        txtAdvice.setRows(5);
        txtAdvice.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtAdvice);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 290, -1, 80));

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        getContentPane().add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 380, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/geometric-1732847_1280.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnalyzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyzeActionPerformed
           if (txtid.getText().trim().isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please enter Student ID.");
    return;
}

String studentId = txtid.getText().trim();

try (Connection conn = DatabaseManager.getConnection()) {
    String query = "SELECT student_name, subject1, subject2, subject3, subject4, subject5 FROM marks WHERE student_id = ?";
    try (PreparedStatement pst = conn.prepareStatement(query)) {
        pst.setString(1, studentId);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            // Show student name
            String studentName = rs.getString("student_name");
            lblname.setText("Name: " + studentName);

            Integer s1 = rs.getObject("subject1", Integer.class);
            Integer s2 = rs.getObject("subject2", Integer.class);
            Integer s3 = rs.getObject("subject3", Integer.class);
            Integer s4 = rs.getObject("subject4", Integer.class);
            Integer s5 = rs.getObject("subject5", Integer.class);

            Integer[] marks = {s1, s2, s3, s4, s5};
            String[] subjectNames = {"Subject1", "Subject2", "Subject3", "Subject4", "Subject5"};

            int total = 0, count = 0, missing = 0;
            java.util.List<String> failedSubjects = new java.util.ArrayList<>();

            for (int i = 0; i < marks.length; i++) {
                Integer mark = marks[i];
                if (mark != null) {
                    total += mark;
                    count++;
                    if (mark < 30) failedSubjects.add(subjectNames[i]);
                } else {
                    missing++;
                }
            }

            double gpa = 0;
            if (count > 0) {
                gpa = Math.round((total / (double) count / 25.0) * 100.0) / 100.0;
                lblGPA.setText("GPA: " + gpa);
                lblSubjects.setText("Subjects Counted: " + count);
                lblMissing.setText("Missing Subjects: " + missing);
            } else {
                lblGPA.setText("GPA: N/A");
                lblSubjects.setText("Subjects Counted: 0");
                lblMissing.setText("Missing Subjects: 5");
            }

            if (failedSubjects.isEmpty()) {
    lblFailed.setText("Failed Subjects:\nNone");
} else {
    StringBuilder failedText = new StringBuilder("Failed Subjects:\n");
    for (String subject : failedSubjects) {
        failedText.append("- ").append(subject).append("\n");
    }
    lblFailed.setText("<html>" + failedText.toString().replaceAll("\n", "<br>") + "</html>");
}


            // Update GPA progress bar
            int gpaValue = (int) (gpa * 100);
            gpaProgress.setValue(gpaValue);
            gpaProgress.setString(gpa + " / 4.0");

            if (gpa >= 3.5) {
                gpaProgress.setForeground(Color.GREEN.darker());
                txtAdvice.setText("Excellent performance across all subjects!");
            } else if (gpa >= 2.5) {
                gpaProgress.setForeground(Color.ORANGE.darker());
                txtAdvice.setText("You're doing well! Keep it up!");
            } else {
                gpaProgress.setForeground(Color.RED.darker());
                txtAdvice.setText("Work on improving your weak subjects.");
            }

            // Create chart
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            if (s1 != null) dataset.addValue(s1, "Marks", "Subject1");
            if (s2 != null) dataset.addValue(s2, "Marks", "Subject2");
            if (s3 != null) dataset.addValue(s3, "Marks", "Subject3");
            if (s4 != null) dataset.addValue(s4, "Marks", "Subject4");
            if (s5 != null) dataset.addValue(s5, "Marks", "Subject5");

            JFreeChart barChart = ChartFactory.createBarChart(
                "Subject-wise Performance", "Subjects", "Marks", dataset,
                PlotOrientation.VERTICAL, false, true, false
            );
            barChart.getCategoryPlot().getRenderer().setSeriesPaint(0, new Color(255, 99, 132));

            ChartPanel cp = new ChartPanel(barChart);
            chartPanel.removeAll();
            cp.setPreferredSize(new java.awt.Dimension(250, 180));
            chartPanel.setLayout(new java.awt.BorderLayout());
            chartPanel.add(cp, java.awt.BorderLayout.CENTER);
            chartPanel.validate();
            chartPanel.repaint();

            // --- Ranking ---
            String coursePrefix = studentId.split("-")[0].toLowerCase();
            String allQuery = "SELECT student_id, subject1, subject2, subject3, subject4, subject5 FROM marks";
            try (PreparedStatement allPst = conn.prepareStatement(allQuery)) {
                try (ResultSet allRs = allPst.executeQuery()) {
                    java.util.List<java.util.Map.Entry<String, Double>> gpaList = new java.util.ArrayList<>();
                    while (allRs.next()) {
                        String id = allRs.getString("student_id");
                        if (!id.toLowerCase().startsWith(coursePrefix)) continue;

                        Integer[] subs = {
                            allRs.getObject("subject1", Integer.class),
                            allRs.getObject("subject2", Integer.class),
                            allRs.getObject("subject3", Integer.class),
                            allRs.getObject("subject4", Integer.class),
                            allRs.getObject("subject5", Integer.class)
                        };
                        int sum = 0, subCount = 0;
                        for (Integer m : subs) {
                            if (m != null) {
                                sum += m;
                                subCount++;
                            }
                        }
                        if (subCount > 0) {
                            double gpaVal = Math.round((sum / (double) subCount / 25.0) * 100.0) / 100.0;
                            gpaList.add(new java.util.AbstractMap.SimpleEntry<>(id, gpaVal));
                        }
                    }

                    gpaList.sort((a, b) -> Double.compare(b.getValue(), a.getValue()));
                    int rank = 1;
                    for (java.util.Map.Entry<String, Double> entry : gpaList) {
                        if (entry.getKey().equalsIgnoreCase(studentId)) {
                            lblSubjects.setText(lblSubjects.getText() + " | Rank in " + coursePrefix.toUpperCase() + ": " + rank + "/" + gpaList.size());
                            break;
                        }
                        rank++;
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Student not found.");
        }
    }
} catch (SQLException ex) {
    JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
}
    }//GEN-LAST:event_btnAnalyzeActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        Dashboard dashboard = new Dashboard();
        dashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Analyticsview().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalyze;
    private javax.swing.JButton btnback;
    private javax.swing.JPanel chartPanel;
    private javax.swing.JProgressBar gpaProgress;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFailed;
    private javax.swing.JLabel lblGPA;
    private javax.swing.JLabel lblMissing;
    private javax.swing.JLabel lblSubjects;
    private javax.swing.JLabel lblname;
    private javax.swing.JTextArea txtAdvice;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
}
