/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class acadamicdata extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(acadamicdata.class.getName());

    /**
     * Creates new form acadamicdata
     */
    
    public acadamicdata() {
        initComponents();
        setSize(700, 520);
    }
         public class DatabaseManager {
    private static final String URL = "jdbc:mysql://localhost:3306/apas";  // your DB
    private static final String USER = "ch";
    private static final String PASSWORD = "chela";

    public static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnback = new javax.swing.JButton();
        txtid = new javax.swing.JTextField();
        txtSubject1 = new javax.swing.JTextField();
        txtSubject2 = new javax.swing.JTextField();
        txtSubject3 = new javax.swing.JTextField();
        txtSubject4 = new javax.swing.JTextField();
        txtSubject5 = new javax.swing.JTextField();
        btnupdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnback.setForeground(new java.awt.Color(255, 51, 51));
        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        getContentPane().add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 410, 109, 42));
        getContentPane().add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 52, 122, 30));
        getContentPane().add(txtSubject1, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 92, 122, 28));
        getContentPane().add(txtSubject2, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 126, 122, 28));
        getContentPane().add(txtSubject3, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 166, 122, 30));
        getContentPane().add(txtSubject4, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 208, 122, 30));
        getContentPane().add(txtSubject5, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 250, 122, 30));

        btnupdate.setForeground(new java.awt.Color(102, 153, 255));
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, 109, 41));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Student ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 52, 72, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Subject 01");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 95, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Subject 02");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 129, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Subject 03");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 170, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Subject 04");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 212, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Subject 05");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 254, -1, -1));

        jButton1.setForeground(new java.awt.Color(102, 153, 255));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, 98, 41));

        btndelete.setForeground(new java.awt.Color(102, 153, 255));
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 410, 98, 42));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/geometric-1732847_1280.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        Dashboard dashboard = new Dashboard();
        dashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
    String studentId = txtid.getText().trim();
    if (studentId.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter Student ID.");
        return;
    }

    try (Connection conn = DatabaseManager.getConnection()) {

        // Check if student marks record exists
        String checkSql = "SELECT 1 FROM marks WHERE student_id = ?";
        try (PreparedStatement checkStmt = conn.prepareStatement(checkSql)) {
            checkStmt.setString(1, studentId);
            ResultSet rs = checkStmt.executeQuery();
            if (!rs.next()) {
                JOptionPane.showMessageDialog(this, "No marks found for this student. Please add marks first.");
                return;
            }
        }

        // Parse marks input, treat empty as NULL
        Integer s1 = parseMark(txtSubject1.getText());
        Integer s2 = parseMark(txtSubject2.getText());
        Integer s3 = parseMark(txtSubject3.getText());
        Integer s4 = parseMark(txtSubject4.getText());
        Integer s5 = parseMark(txtSubject5.getText());

        // Update marks query - marks only
        String updateSql = "UPDATE marks SET subject1=?, subject2=?, subject3=?, subject4=?, subject5=? WHERE student_id=?";
        try (PreparedStatement pst = conn.prepareStatement(updateSql)) {
            setNullableInt(pst, 1, s1);
            setNullableInt(pst, 2, s2);
            setNullableInt(pst, 3, s3);
            setNullableInt(pst, 4, s4);
            setNullableInt(pst, 5, s5);
            pst.setString(6, studentId);

            int updatedRows = pst.executeUpdate();
            if (updatedRows > 0) {
                JOptionPane.showMessageDialog(this, "Marks updated successfully.");
            } else {
                JOptionPane.showMessageDialog(this, "Failed to update marks.");
            }
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error updating marks: " + ex.getMessage());
    }
}

// Helper to parse integer mark or return null if empty or invalid
private Integer parseMark(String text) {
    try {
        text = text.trim();
        if (text.isEmpty()) return null;
        return Integer.valueOf(text);
    } catch (NumberFormatException e) {
        return null;
    }
}     


// Helper to set Integer or NULL in PreparedStatement
private void setNullableInt(PreparedStatement pst, int index, Integer value) throws SQLException {
    if (value == null) {
        pst.setNull(index, java.sql.Types.INTEGER);
    } else {
        pst.setInt(index, value);
    }

    }//GEN-LAST:event_btnupdateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
              String studentId = txtid.getText().trim();

    if (studentId.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter Student ID.");
        return;
    }

    try (Connection conn = DatabaseManager.getConnection()) {

        // Step 1: Get student name from 'students' table
        String studentName = null;
        String query = "SELECT name FROM student WHERE student_id = ?";
        try (PreparedStatement pst = conn.prepareStatement(query)) {
            pst.setString(1, studentId);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                studentName = rs.getString("name");
            } else {
                JOptionPane.showMessageDialog(this, "Student ID not found.");
                return;
            }
        }

        // Step 2: Read marks
        Integer s1 = parseMark(txtSubject1.getText());
        Integer s2 = parseMark(txtSubject2.getText());
        Integer s3 = parseMark(txtSubject3.getText());
        Integer s4 = parseMark(txtSubject4.getText());
        Integer s5 = parseMark(txtSubject5.getText());

        // Step 3: Insert into marks table
        String insertSql = "INSERT INTO marks (student_id, student_name, subject1, subject2, subject3, subject4, subject5) VALUES (?, ?, ?, ?, ?, ?, ?)";
        try (PreparedStatement pst = conn.prepareStatement(insertSql)) {
            pst.setString(1, studentId);
            pst.setString(2, studentName);
            setNullableInt(pst, 3, s1);
            setNullableInt(pst, 4, s2);
            setNullableInt(pst, 5, s3);
            setNullableInt(pst, 6, s4);
            setNullableInt(pst, 7, s5);

            int rows = pst.executeUpdate();
            if (rows > 0) {
                JOptionPane.showMessageDialog(this, "Marks added for: " + studentName);
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add marks.");
            }
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        
    }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
         String studentId = txtid.getText().trim();
    if (studentId.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter Student ID.");
        return;
    }

    try (Connection conn = DatabaseManager.getConnection()) {
        String deleteSql = "DELETE FROM marks WHERE student_id = ?";
        try (PreparedStatement pst = conn.prepareStatement(deleteSql)) {
            pst.setString(1, studentId);

            int deletedRows = pst.executeUpdate();
            if (deletedRows > 0) {
                JOptionPane.showMessageDialog(this, "Marks record deleted successfully.");
            } else {
                JOptionPane.showMessageDialog(this, "No marks record found for this Student ID.");
            }
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error deleting marks: " + ex.getMessage());
    }
    }//GEN-LAST:event_btndeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new acadamicdata().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtSubject1;
    private javax.swing.JTextField txtSubject2;
    private javax.swing.JTextField txtSubject3;
    private javax.swing.JTextField txtSubject4;
    private javax.swing.JTextField txtSubject5;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
}
